# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

# Store all the bond extra information
type NominationPoolBondExtraExtrinsic @entity {
  id: ID! # unique id for this entity
  account: String! @index(unique: false)
  type: NominationBondExtraType!
  timestamp: Date!
}

enum NominationBondExtraType {
  REWARDS
  FREEBALANCE
}

type NominationPoolJoinExtrinsic @entity {
  id: ID! #id is a required field
  account: String! @index(unique: false)
  amount: BigInt!
  pool_id: Int!
  timestamp: Date!
}

type NominationPoolPaidOutEvent @entity {
  id: ID! #id is a required field
  ext_id: String! @index(unique: true)
  account: String! @index(unique: false)
  amount: BigInt!
  pool_id: Int!
  timestamp: Date!
}

type NominationPoolBondedEvent @entity {
  id: ID! #id is a required field
  extrinsic_id: String! @index(unique: true)
  account: String! @index(unique: false)
  pool_id: Int!
  amount: BigInt!
  joined: Boolean! # indicates if the bonded action if first to join the pool.
  timestamp: Date!
}

type TransactionFeePaidEvent @entity {
  id: ID! #id is a required field
  extrinsic_id: String! @index(unique: true)
  payee: String! @index(unique: false)
  actual_fee: BigInt!
  module: String!
  method: String!
  tip: BigInt!
  timestamp: Date!
}

#pool has been created
type NominationPoolCreatedEvent @entity {
  id: ID! #id is a required field
  extrinsic_id: String! @index(unique: true)
  pool_id: Int!
  depositor: String! @index(unique: false)
  timestamp: Date!
}

type NominationPoolSlashedEvent @entity {
  id: ID! #id is a required field
  extrinsic_id: String! @index(unique: true)
  pool_id: Int!
  amount: BigInt!
  timestamp: Date!
}
